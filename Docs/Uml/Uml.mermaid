classDiagram
direction TB
class Test {
    - static final int[] THREAD_COUNTS
    - static final int ITERATIVE_REQUESTS
    - static final Path CSV_FILE
    --
    + main(String[] args)
    - runIterativeScenario(PrintWriter writer)
    - runConcurrentScenario(PrintWriter writer, int threadCount)
    - collectTimingData(PrintWriter writer, String scenario)
    - estimateProcessorPerformance()
}
style Test fill:#DDDDDD

class ProcessorPerformanceEstimator {
    - static final Path CSV_FILE
    - static final Path OUTPUT_FILE
    --
    + estimateAndWriteToFile()
    - calculateAverage(List<Long> times)
    - getProcessorSpeed()
}
style ProcessorPerformanceEstimator fill:#DDDDDD

class PackageServer {
    - static final int PORT
    - static final String PRIVATE_KEY_FILE
    - static final String PUBLIC_KEY_FILE
    - ServerSocket serverSocket
    --
    + PackageServer()
    + main(String[] args)
    - run()
    - initializePackageStates()
    - generateRSAKeys()
    - readRSAKeys()
    + startServerIterative()
    + startServerConcurrent(int numThreads)
    + stopServer()
    - handleClient(Socket clientSocket, boolean isConcurrent)
    - getStateString(int state)
    - saveKeyToFile(String filename, byte[] keyBytes)
    - readKeyFromFile(String filename)
    --
    static ConcurrentLinkedQueue<Long> challengeResponseTimes
    static ConcurrentLinkedQueue<Long> dhGenerationTimes
    static ConcurrentLinkedQueue<Long> verificationTimes
    static ConcurrentLinkedQueue<Long> symmetricEncryptionTimes
    static ConcurrentLinkedQueue<Long> asymmetricEncryptionTimes
    --
    - Map<String, Integer> packageStates
    - PrivateKey privateKey
    - PublicKey publicKey
}
style PackageServer fill:#DDDDDD

class PackageClient {
    - static final String SERVER_ADDRESS
    - static final int SERVER_PORT
    - static final String SERVER_PUBLIC_KEY_FILE
    - PublicKey serverPublicKey
    --
    + main(String[] args)
    + readServerPublicKey()
    - readKeyFromFile(String filename)
    - run()
    - runIterative()
    - runConcurrent(int numDelegates)
    + sendRequest(String uid, String packageId) : long[]
}
style PackageClient fill:#DDDDDD

class DiffieHellman {
    - static BigInteger p
    - static BigInteger g
    --
    + getP() : BigInteger
    + getG() : BigInteger
}
style DiffieHellman fill:#DDDDDD

Test --> PackageServer : utiliza
Test --> PackageClient : utiliza
Test --> ProcessorPerformanceEstimator : utiliza
PackageServer ..> DiffieHellman : utiliza
